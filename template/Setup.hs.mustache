import Distribution.PackageDescription
import Distribution.Simple
import Distribution.Simple.LocalBuildInfo
import Distribution.Simple.Setup
import System.Directory
import System.FilePath

main :: IO ()
main = defaultMainWithHooks simpleUserHooks{ confHook = myConfHook }

myConfHook
    :: (GenericPackageDescription, HookedBuildInfo)
    -> ConfigFlags
    -> IO LocalBuildInfo
myConfHook (description, buildInfo) flags = do
    localBuildInfo <- confHook simpleUserHooks (description, buildInfo) flags
    let packageDescription = localPkgDescr localBuildInfo
        lib = library packageDescription
    dir <- getCurrentDirectory
    return localBuildInfo {
        localPkgDescr = packageDescription {
            library = addExtraLibDirs [dir </> "cobj"] <$> lib }}

addExtraLibDirs :: [FilePath] -> Library -> Library
addExtraLibDirs newLibDirs lib = lib{
    libBuildInfo = (libBuildInfo lib){
         extraLibDirs = newLibDirs ++ extraLibDirs (libBuildInfo lib) }}
